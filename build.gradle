plugins {
    id 'org.ajoberstar.grgit' version '2.2.1'
}
apply plugin: 'maven'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group 'cpw.mods'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacoco {
    toolVersion = "0.7.9"
}

test {
    useJUnitPlatform()
    forkEvery 1
}
sourceSets {
    mlservice
    testJars
}

task mlserviceJar(type: Jar) {
    classifier = 'service'
    from sourceSets.main.output
    from sourceSets.mlservice.output
    manifest {
        attributes(["Specification-Title": "eventbus",
                    "Specification-Vendor": "Forge",
                    "Specification-Version": "1", // Currently version 1 of the eventbus specification
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}+${System.getenv("BUILD_NUMBER")?:0}+${grgit.head().getAbbreviatedId(8)}",
                    "Implementation-Vendor" :"Forge",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "Git-Commit": grgit.head().getAbbreviatedId(8),
                    "Git-Branch": grgit.branch.current().getName() ],
                "cpw/mods/eventbus/service/")
    }
}

task testsJar(type: Jar) {
    classifier = 'testsjar'
    from sourceSets.testJars.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from sourceSets.mlservice.allSource
}

artifacts {
    archives jar
    archives sourcesJar
    archives testsJar
    archives mlserviceJar
}

build.dependsOn mlserviceJar

repositories {
    mavenCentral()
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.2.0")
    testImplementation("org.powermock:powermock-core:1.7.3")
    testImplementation("cpw.mods:modlauncher:0.1-SNAPSHOT")
    testImplementation(sourceSets.mlservice.output)
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.2.0")
    testImplementation("org.apache.logging.log4j:log4j-core:2.10.0")
    testImplementation(sourceSets.testJars.runtimeClasspath)
    testImplementation(sourceSets.mlservice.output)
    testJarsImplementation(sourceSets.main.output)
    implementation("org.ow2.asm:asm:6.0")
    implementation("org.ow2.asm:asm-commons:6.0")
    implementation("org.ow2.asm:asm-tree:6.0")
    implementation("net.sf.jopt-simple:jopt-simple:5.0.4")
    implementation("org.apache.logging.log4j:log4j-api:2.10.0")
    implementation("cpw.mods:modlauncher:0.1-SNAPSHOT:api")
    mlserviceImplementation("cpw.mods:modlauncher:0.1-SNAPSHOT:api")
    mlserviceImplementation(sourceSets.main.output)
}
uploadArchives {
    repositories.mavenDeployer {
        if (project.hasProperty('forgeMavenPassword'))
        {
            repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                authentication(userName: project.getProperty('forgeMavenUser'), password: project.getProperty('forgeMavenPassword'))
            }
        } else {
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }
        pom {
            groupId = project.group
            artifactId = project.archivesBaseName
            //noinspection GroovyAssignabilityCheck
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'Event Bus library'
                url 'https://github.com/cpw/eventbus'

                scm {
                    url 'https://github.com/cpw/eventbus'
                    connection 'scm:git:git://github.com/cpw/eventbus.git'
                    developerConnection 'scm:git:git@github.com:cpw/eventbus.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/cpw/eventbus/issues'
                }

                licenses {
                    license {
                        name 'LGPLv2.1'
                        url 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'cpw'
                        name 'cpw'
                        roles { role 'developer' }
                    }
                    developer {
                        id 'LexManos'
                        name 'LexManos'
                        roles { role 'developer' }
                    }
                }
            }
        }
    }
}
